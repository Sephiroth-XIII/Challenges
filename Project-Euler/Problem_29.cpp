/*
Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
    2^2=4, 2^3=8, 2^4=16, 2^5=32
    3^2=9, 3^3=27, 3^4=81, 3^5=243
    4^2=16, 4^3=64, 4^4=256, 4^5=1024
    5^2=25, 5^3=125, 5^4=625, 5^5=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:
4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
*/

#include<iostream>
#include<set>
#include<string>

using namespace std;

int num[202];
string result;

void itoa();
void power(int a,int b);

int main()
{
	int a,b;
	set<string> bucket;
	
	for(a=2;a<=100;a++)
	{
		for(b=2;b<=100;b++)
		{
			power(a,b);
			bucket.insert(result);
		}
	}
	cout<<bucket.size()<<"\n";
	return 0;	
}

void power(int a,int b)//a^b
{
	int i,j,carry[202];
	fill_n(num,202,0);
	num[201]=1;
	carry[201]=0;
	for(i=0;i<b;i++)
	{
		for(j=201;j>0;j--)
		{
			num[j]*=a;
			num[j]+=carry[j];
			carry[j-1]=num[j]/10;
			num[j]%=10;
		}
	}
	itoa();
	return;	
}

void itoa()//Store a^b from power(a,b) in string result
{
	int i,sum=0;
	result="";
	char *singleint;
	for(i=0;i<202;i++)
	{
		sum+=num[i];
		if(sum==0)continue;
		singleint[0]=char(num[i]+48);
		result+=(singleint);
	}
	return;
}
